import * as _m0 from "protobufjs/minimal";
import { ResponseEndBlock, ResponseBeginBlock, ResponseDeliverTx } from "../../tendermint/abci/types";
import { ValidatorSet } from "../../tendermint/types/validator";
import { ConsensusParams } from "../../tendermint/types/params";
import { Consensus } from "../../tendermint/version/types";
import { BlockID } from "../../tendermint/types/types";
import { Timestamp } from "../../google/protobuf/timestamp";
export declare const protobufPackage = "tendermint.state";
/**
 * ABCIResponses retains the responses
 * of the various ABCI calls during block processing.
 * It is persisted to disk for each height before calling Commit.
 */
export interface ABCIResponses {
    deliverTxs: ResponseDeliverTx[];
    endBlock?: ResponseEndBlock;
    beginBlock?: ResponseBeginBlock;
}
/** ValidatorsInfo represents the latest validator set, or the last height it changed */
export interface ValidatorsInfo {
    validatorSet?: ValidatorSet;
    lastHeightChanged: string;
}
/** ConsensusParamsInfo represents the latest consensus params, or the last height it changed */
export interface ConsensusParamsInfo {
    consensusParams?: ConsensusParams;
    lastHeightChanged: string;
}
export interface Version {
    consensus?: Consensus;
    software: string;
}
export interface State {
    version?: Version;
    /** immutable */
    chainId: string;
    initialHeight: string;
    /** LastBlockHeight=0 at genesis (ie. block(H=0) does not exist) */
    lastBlockHeight: string;
    lastBlockId?: BlockID;
    lastBlockTime?: Timestamp;
    /**
     * LastValidators is used to validate block.LastCommit.
     * Validators are persisted to the database separately every time they change,
     * so we can query for historical validator sets.
     * Note that if s.LastBlockHeight causes a valset change,
     * we set s.LastHeightValidatorsChanged = s.LastBlockHeight + 1 + 1
     * Extra +1 due to nextValSet delay.
     */
    nextValidators?: ValidatorSet;
    validators?: ValidatorSet;
    lastValidators?: ValidatorSet;
    lastHeightValidatorsChanged: string;
    /**
     * Consensus parameters used for validating blocks.
     * Changes returned by EndBlock and updated after Commit.
     */
    consensusParams?: ConsensusParams;
    lastHeightConsensusParamsChanged: string;
    /** Merkle root of the results from executing prev block */
    lastResultsHash: Uint8Array;
    /** the latest AppHash we've received from calling abci.Commit() */
    appHash: Uint8Array;
}
export declare const ABCIResponses: {
    encode(message: ABCIResponses, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ABCIResponses;
    fromJSON(object: any): ABCIResponses;
    toJSON(message: ABCIResponses): unknown;
    fromPartial<I extends {
        deliverTxs?: {
            code?: number | undefined;
            data?: Uint8Array | undefined;
            log?: string | undefined;
            info?: string | undefined;
            gasWanted?: string | undefined;
            gasUsed?: string | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            codespace?: string | undefined;
        }[] | undefined;
        endBlock?: {
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: string | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: string | undefined;
                    maxGas?: string | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: string | undefined;
                    maxAgeDuration?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: string | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    appVersion?: string | undefined;
                } | undefined;
            } | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        beginBlock?: {
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        deliverTxs?: ({
            code?: number | undefined;
            data?: Uint8Array | undefined;
            log?: string | undefined;
            info?: string | undefined;
            gasWanted?: string | undefined;
            gasUsed?: string | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            codespace?: string | undefined;
        }[] & ({
            code?: number | undefined;
            data?: Uint8Array | undefined;
            log?: string | undefined;
            info?: string | undefined;
            gasWanted?: string | undefined;
            gasUsed?: string | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            codespace?: string | undefined;
        } & {
            code?: number | undefined;
            data?: Uint8Array | undefined;
            log?: string | undefined;
            info?: string | undefined;
            gasWanted?: string | undefined;
            gasUsed?: string | undefined;
            events?: ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] & ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            } & {
                type?: string | undefined;
                attributes?: ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] & ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & Record<Exclude<keyof I["deliverTxs"][number]["events"][number]["attributes"][number], keyof import("../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["deliverTxs"][number]["events"][number]["attributes"], keyof {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["deliverTxs"][number]["events"][number], keyof import("../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["deliverTxs"][number]["events"], keyof {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            codespace?: string | undefined;
        } & Record<Exclude<keyof I["deliverTxs"][number], keyof ResponseDeliverTx>, never>)[] & Record<Exclude<keyof I["deliverTxs"], keyof {
            code?: number | undefined;
            data?: Uint8Array | undefined;
            log?: string | undefined;
            info?: string | undefined;
            gasWanted?: string | undefined;
            gasUsed?: string | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
            codespace?: string | undefined;
        }[]>, never>) | undefined;
        endBlock?: ({
            validatorUpdates?: {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: string | undefined;
            }[] | undefined;
            consensusParamUpdates?: {
                block?: {
                    maxBytes?: string | undefined;
                    maxGas?: string | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: string | undefined;
                    maxAgeDuration?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: string | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    appVersion?: string | undefined;
                } | undefined;
            } | undefined;
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            validatorUpdates?: ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: string | undefined;
            }[] & ({
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: string | undefined;
            } & {
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["endBlock"]["validatorUpdates"][number]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                power?: string | undefined;
            } & Record<Exclude<keyof I["endBlock"]["validatorUpdates"][number], keyof import("../../tendermint/abci/types").ValidatorUpdate>, never>)[] & Record<Exclude<keyof I["endBlock"]["validatorUpdates"], keyof {
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                power?: string | undefined;
            }[]>, never>) | undefined;
            consensusParamUpdates?: ({
                block?: {
                    maxBytes?: string | undefined;
                    maxGas?: string | undefined;
                } | undefined;
                evidence?: {
                    maxAgeNumBlocks?: string | undefined;
                    maxAgeDuration?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: string | undefined;
                } | undefined;
                validator?: {
                    pubKeyTypes?: string[] | undefined;
                } | undefined;
                version?: {
                    appVersion?: string | undefined;
                } | undefined;
            } & {
                block?: ({
                    maxBytes?: string | undefined;
                    maxGas?: string | undefined;
                } & {
                    maxBytes?: string | undefined;
                    maxGas?: string | undefined;
                } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["block"], keyof import("../../tendermint/abci/types").BlockParams>, never>) | undefined;
                evidence?: ({
                    maxAgeNumBlocks?: string | undefined;
                    maxAgeDuration?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    maxBytes?: string | undefined;
                } & {
                    maxAgeNumBlocks?: string | undefined;
                    maxAgeDuration?: ({
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["evidence"]["maxAgeDuration"], keyof import("../../google/protobuf/duration").Duration>, never>) | undefined;
                    maxBytes?: string | undefined;
                } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["evidence"], keyof import("../../tendermint/types/params").EvidenceParams>, never>) | undefined;
                validator?: ({
                    pubKeyTypes?: string[] | undefined;
                } & {
                    pubKeyTypes?: (string[] & string[] & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["validator"]["pubKeyTypes"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["validator"], "pubKeyTypes">, never>) | undefined;
                version?: ({
                    appVersion?: string | undefined;
                } & {
                    appVersion?: string | undefined;
                } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"]["version"], "appVersion">, never>) | undefined;
            } & Record<Exclude<keyof I["endBlock"]["consensusParamUpdates"], keyof import("../../tendermint/abci/types").ConsensusParams>, never>) | undefined;
            events?: ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] & ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            } & {
                type?: string | undefined;
                attributes?: ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] & ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & Record<Exclude<keyof I["endBlock"]["events"][number]["attributes"][number], keyof import("../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["endBlock"]["events"][number]["attributes"], keyof {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["endBlock"]["events"][number], keyof import("../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["endBlock"]["events"], keyof {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["endBlock"], keyof ResponseEndBlock>, never>) | undefined;
        beginBlock?: ({
            events?: {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            events?: ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[] & ({
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            } & {
                type?: string | undefined;
                attributes?: ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] & ({
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                } & Record<Exclude<keyof I["beginBlock"]["events"][number]["attributes"][number], keyof import("../../tendermint/abci/types").EventAttribute>, never>)[] & Record<Exclude<keyof I["beginBlock"]["events"][number]["attributes"], keyof {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["beginBlock"]["events"][number], keyof import("../../tendermint/abci/types").Event>, never>)[] & Record<Exclude<keyof I["beginBlock"]["events"], keyof {
                type?: string | undefined;
                attributes?: {
                    key?: Uint8Array | undefined;
                    value?: Uint8Array | undefined;
                    index?: boolean | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["beginBlock"], "events">, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ABCIResponses>, never>>(object: I): ABCIResponses;
};
export declare const ValidatorsInfo: {
    encode(message: ValidatorsInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ValidatorsInfo;
    fromJSON(object: any): ValidatorsInfo;
    toJSON(message: ValidatorsInfo): unknown;
    fromPartial<I extends {
        validatorSet?: {
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } | undefined;
        lastHeightChanged?: string | undefined;
    } & {
        validatorSet?: ({
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } & {
            validators?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] & ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["validatorSet"]["validators"][number]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["validatorSet"]["validators"][number], keyof import("../../tendermint/types/validator").Validator>, never>)[] & Record<Exclude<keyof I["validatorSet"]["validators"], keyof {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[]>, never>) | undefined;
            proposer?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["validatorSet"]["proposer"]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["validatorSet"]["proposer"], keyof import("../../tendermint/types/validator").Validator>, never>) | undefined;
            totalVotingPower?: string | undefined;
        } & Record<Exclude<keyof I["validatorSet"], keyof ValidatorSet>, never>) | undefined;
        lastHeightChanged?: string | undefined;
    } & Record<Exclude<keyof I, keyof ValidatorsInfo>, never>>(object: I): ValidatorsInfo;
};
export declare const ConsensusParamsInfo: {
    encode(message: ConsensusParamsInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConsensusParamsInfo;
    fromJSON(object: any): ConsensusParamsInfo;
    toJSON(message: ConsensusParamsInfo): unknown;
    fromPartial<I extends {
        consensusParams?: {
            block?: {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } | undefined;
            evidence?: {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } | undefined;
            validator?: {
                pubKeyTypes?: string[] | undefined;
            } | undefined;
            version?: {
                appVersion?: string | undefined;
            } | undefined;
        } | undefined;
        lastHeightChanged?: string | undefined;
    } & {
        consensusParams?: ({
            block?: {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } | undefined;
            evidence?: {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } | undefined;
            validator?: {
                pubKeyTypes?: string[] | undefined;
            } | undefined;
            version?: {
                appVersion?: string | undefined;
            } | undefined;
        } & {
            block?: ({
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } & {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["block"], keyof import("../../tendermint/types/params").BlockParams>, never>) | undefined;
            evidence?: ({
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } & {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: ({
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & Record<Exclude<keyof I["consensusParams"]["evidence"]["maxAgeDuration"], keyof import("../../google/protobuf/duration").Duration>, never>) | undefined;
                maxBytes?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["evidence"], keyof import("../../tendermint/types/params").EvidenceParams>, never>) | undefined;
            validator?: ({
                pubKeyTypes?: string[] | undefined;
            } & {
                pubKeyTypes?: (string[] & string[] & Record<Exclude<keyof I["consensusParams"]["validator"]["pubKeyTypes"], keyof string[]>, never>) | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["validator"], "pubKeyTypes">, never>) | undefined;
            version?: ({
                appVersion?: string | undefined;
            } & {
                appVersion?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["version"], "appVersion">, never>) | undefined;
        } & Record<Exclude<keyof I["consensusParams"], keyof ConsensusParams>, never>) | undefined;
        lastHeightChanged?: string | undefined;
    } & Record<Exclude<keyof I, keyof ConsensusParamsInfo>, never>>(object: I): ConsensusParamsInfo;
};
export declare const Version: {
    encode(message: Version, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Version;
    fromJSON(object: any): Version;
    toJSON(message: Version): unknown;
    fromPartial<I extends {
        consensus?: {
            block?: string | undefined;
            app?: string | undefined;
        } | undefined;
        software?: string | undefined;
    } & {
        consensus?: ({
            block?: string | undefined;
            app?: string | undefined;
        } & {
            block?: string | undefined;
            app?: string | undefined;
        } & Record<Exclude<keyof I["consensus"], keyof Consensus>, never>) | undefined;
        software?: string | undefined;
    } & Record<Exclude<keyof I, keyof Version>, never>>(object: I): Version;
};
export declare const State: {
    encode(message: State, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): State;
    fromJSON(object: any): State;
    toJSON(message: State): unknown;
    fromPartial<I extends {
        version?: {
            consensus?: {
                block?: string | undefined;
                app?: string | undefined;
            } | undefined;
            software?: string | undefined;
        } | undefined;
        chainId?: string | undefined;
        initialHeight?: string | undefined;
        lastBlockHeight?: string | undefined;
        lastBlockId?: {
            hash?: Uint8Array | undefined;
            partSetHeader?: {
                total?: number | undefined;
                hash?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        lastBlockTime?: {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } | undefined;
        nextValidators?: {
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } | undefined;
        validators?: {
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } | undefined;
        lastValidators?: {
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } | undefined;
        lastHeightValidatorsChanged?: string | undefined;
        consensusParams?: {
            block?: {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } | undefined;
            evidence?: {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } | undefined;
            validator?: {
                pubKeyTypes?: string[] | undefined;
            } | undefined;
            version?: {
                appVersion?: string | undefined;
            } | undefined;
        } | undefined;
        lastHeightConsensusParamsChanged?: string | undefined;
        lastResultsHash?: Uint8Array | undefined;
        appHash?: Uint8Array | undefined;
    } & {
        version?: ({
            consensus?: {
                block?: string | undefined;
                app?: string | undefined;
            } | undefined;
            software?: string | undefined;
        } & {
            consensus?: ({
                block?: string | undefined;
                app?: string | undefined;
            } & {
                block?: string | undefined;
                app?: string | undefined;
            } & Record<Exclude<keyof I["version"]["consensus"], keyof Consensus>, never>) | undefined;
            software?: string | undefined;
        } & Record<Exclude<keyof I["version"], keyof Version>, never>) | undefined;
        chainId?: string | undefined;
        initialHeight?: string | undefined;
        lastBlockHeight?: string | undefined;
        lastBlockId?: ({
            hash?: Uint8Array | undefined;
            partSetHeader?: {
                total?: number | undefined;
                hash?: Uint8Array | undefined;
            } | undefined;
        } & {
            hash?: Uint8Array | undefined;
            partSetHeader?: ({
                total?: number | undefined;
                hash?: Uint8Array | undefined;
            } & {
                total?: number | undefined;
                hash?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["lastBlockId"]["partSetHeader"], keyof import("../../tendermint/types/types").PartSetHeader>, never>) | undefined;
        } & Record<Exclude<keyof I["lastBlockId"], keyof BlockID>, never>) | undefined;
        lastBlockTime?: ({
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & Record<Exclude<keyof I["lastBlockTime"], keyof Timestamp>, never>) | undefined;
        nextValidators?: ({
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } & {
            validators?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] & ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["nextValidators"]["validators"][number]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["nextValidators"]["validators"][number], keyof import("../../tendermint/types/validator").Validator>, never>)[] & Record<Exclude<keyof I["nextValidators"]["validators"], keyof {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[]>, never>) | undefined;
            proposer?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["nextValidators"]["proposer"]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["nextValidators"]["proposer"], keyof import("../../tendermint/types/validator").Validator>, never>) | undefined;
            totalVotingPower?: string | undefined;
        } & Record<Exclude<keyof I["nextValidators"], keyof ValidatorSet>, never>) | undefined;
        validators?: ({
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } & {
            validators?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] & ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["validators"]["validators"][number]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["validators"]["validators"][number], keyof import("../../tendermint/types/validator").Validator>, never>)[] & Record<Exclude<keyof I["validators"]["validators"], keyof {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[]>, never>) | undefined;
            proposer?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["validators"]["proposer"]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["validators"]["proposer"], keyof import("../../tendermint/types/validator").Validator>, never>) | undefined;
            totalVotingPower?: string | undefined;
        } & Record<Exclude<keyof I["validators"], keyof ValidatorSet>, never>) | undefined;
        lastValidators?: ({
            validators?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] | undefined;
            proposer?: {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } | undefined;
            totalVotingPower?: string | undefined;
        } & {
            validators?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[] & ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["lastValidators"]["validators"][number]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["lastValidators"]["validators"][number], keyof import("../../tendermint/types/validator").Validator>, never>)[] & Record<Exclude<keyof I["lastValidators"]["validators"], keyof {
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            }[]>, never>) | undefined;
            proposer?: ({
                address?: Uint8Array | undefined;
                pubKey?: {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & {
                address?: Uint8Array | undefined;
                pubKey?: ({
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & {
                    ed25519?: Uint8Array | undefined;
                    secp256k1?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["lastValidators"]["proposer"]["pubKey"], keyof import("../crypto/keys").PublicKey>, never>) | undefined;
                votingPower?: string | undefined;
                proposerPriority?: string | undefined;
            } & Record<Exclude<keyof I["lastValidators"]["proposer"], keyof import("../../tendermint/types/validator").Validator>, never>) | undefined;
            totalVotingPower?: string | undefined;
        } & Record<Exclude<keyof I["lastValidators"], keyof ValidatorSet>, never>) | undefined;
        lastHeightValidatorsChanged?: string | undefined;
        consensusParams?: ({
            block?: {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } | undefined;
            evidence?: {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } | undefined;
            validator?: {
                pubKeyTypes?: string[] | undefined;
            } | undefined;
            version?: {
                appVersion?: string | undefined;
            } | undefined;
        } & {
            block?: ({
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } & {
                maxBytes?: string | undefined;
                maxGas?: string | undefined;
                timeIotaMs?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["block"], keyof import("../../tendermint/types/params").BlockParams>, never>) | undefined;
            evidence?: ({
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                maxBytes?: string | undefined;
            } & {
                maxAgeNumBlocks?: string | undefined;
                maxAgeDuration?: ({
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & Record<Exclude<keyof I["consensusParams"]["evidence"]["maxAgeDuration"], keyof import("../../google/protobuf/duration").Duration>, never>) | undefined;
                maxBytes?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["evidence"], keyof import("../../tendermint/types/params").EvidenceParams>, never>) | undefined;
            validator?: ({
                pubKeyTypes?: string[] | undefined;
            } & {
                pubKeyTypes?: (string[] & string[] & Record<Exclude<keyof I["consensusParams"]["validator"]["pubKeyTypes"], keyof string[]>, never>) | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["validator"], "pubKeyTypes">, never>) | undefined;
            version?: ({
                appVersion?: string | undefined;
            } & {
                appVersion?: string | undefined;
            } & Record<Exclude<keyof I["consensusParams"]["version"], "appVersion">, never>) | undefined;
        } & Record<Exclude<keyof I["consensusParams"], keyof ConsensusParams>, never>) | undefined;
        lastHeightConsensusParamsChanged?: string | undefined;
        lastResultsHash?: Uint8Array | undefined;
        appHash?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof State>, never>>(object: I): State;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
//# sourceMappingURL=types.d.ts.map