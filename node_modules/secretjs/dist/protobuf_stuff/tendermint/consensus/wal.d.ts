import * as _m0 from "protobufjs/minimal";
import { Message } from "../../tendermint/consensus/types";
import { Duration } from "../../google/protobuf/duration";
import { Timestamp } from "../../google/protobuf/timestamp";
import { EventDataRoundState } from "../../tendermint/types/events";
export declare const protobufPackage = "tendermint.consensus";
/** MsgInfo are msgs from the reactor which may update the state */
export interface MsgInfo {
    msg?: Message;
    peerId: string;
}
/** TimeoutInfo internally generated messages which may update the state */
export interface TimeoutInfo {
    duration?: Duration;
    height: string;
    round: number;
    step: number;
}
/**
 * EndHeight marks the end of the given height inside WAL.
 * @internal used by scripts/wal2json util.
 */
export interface EndHeight {
    height: string;
}
export interface WALMessage {
    eventDataRoundState?: EventDataRoundState | undefined;
    msgInfo?: MsgInfo | undefined;
    timeoutInfo?: TimeoutInfo | undefined;
    endHeight?: EndHeight | undefined;
}
/** TimedWALMessage wraps WALMessage and adds Time for debugging purposes. */
export interface TimedWALMessage {
    time?: Timestamp;
    msg?: WALMessage;
}
export declare const MsgInfo: {
    encode(message: MsgInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MsgInfo;
    fromJSON(object: any): MsgInfo;
    toJSON(message: MsgInfo): unknown;
    fromPartial<I extends {
        msg?: {
            newRoundStep?: {
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
                secondsSinceStartTime?: string | undefined;
                lastCommitRound?: number | undefined;
            } | undefined;
            newValidBlock?: {
                height?: string | undefined;
                round?: number | undefined;
                blockPartSetHeader?: {
                    total?: number | undefined;
                    hash?: Uint8Array | undefined;
                } | undefined;
                blockParts?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
                isCommit?: boolean | undefined;
            } | undefined;
            proposal?: {
                proposal?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    polRound?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            proposalPol?: {
                height?: string | undefined;
                proposalPolRound?: number | undefined;
                proposalPol?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } | undefined;
            blockPart?: {
                height?: string | undefined;
                round?: number | undefined;
                part?: {
                    index?: number | undefined;
                    bytes?: Uint8Array | undefined;
                    proof?: {
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: Uint8Array[] | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            vote?: {
                vote?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    validatorAddress?: Uint8Array | undefined;
                    validatorIndex?: number | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            hasVote?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                index?: number | undefined;
            } | undefined;
            voteSetMaj23?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            voteSetBits?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                votes?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } | undefined;
        } | undefined;
        peerId?: string | undefined;
    } & {
        msg?: ({
            newRoundStep?: {
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
                secondsSinceStartTime?: string | undefined;
                lastCommitRound?: number | undefined;
            } | undefined;
            newValidBlock?: {
                height?: string | undefined;
                round?: number | undefined;
                blockPartSetHeader?: {
                    total?: number | undefined;
                    hash?: Uint8Array | undefined;
                } | undefined;
                blockParts?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
                isCommit?: boolean | undefined;
            } | undefined;
            proposal?: {
                proposal?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    polRound?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            proposalPol?: {
                height?: string | undefined;
                proposalPolRound?: number | undefined;
                proposalPol?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } | undefined;
            blockPart?: {
                height?: string | undefined;
                round?: number | undefined;
                part?: {
                    index?: number | undefined;
                    bytes?: Uint8Array | undefined;
                    proof?: {
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: Uint8Array[] | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            vote?: {
                vote?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    validatorAddress?: Uint8Array | undefined;
                    validatorIndex?: number | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            hasVote?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                index?: number | undefined;
            } | undefined;
            voteSetMaj23?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            voteSetBits?: {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                votes?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } | undefined;
        } & {
            newRoundStep?: ({
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
                secondsSinceStartTime?: string | undefined;
                lastCommitRound?: number | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
                secondsSinceStartTime?: string | undefined;
                lastCommitRound?: number | undefined;
            } & Record<Exclude<keyof I["msg"]["newRoundStep"], keyof import("../../tendermint/consensus/types").NewRoundStep>, never>) | undefined;
            newValidBlock?: ({
                height?: string | undefined;
                round?: number | undefined;
                blockPartSetHeader?: {
                    total?: number | undefined;
                    hash?: Uint8Array | undefined;
                } | undefined;
                blockParts?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
                isCommit?: boolean | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                blockPartSetHeader?: ({
                    total?: number | undefined;
                    hash?: Uint8Array | undefined;
                } & {
                    total?: number | undefined;
                    hash?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["msg"]["newValidBlock"]["blockPartSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                blockParts?: ({
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } & {
                    bits?: string | undefined;
                    elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["newValidBlock"]["blockParts"]["elems"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["newValidBlock"]["blockParts"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                isCommit?: boolean | undefined;
            } & Record<Exclude<keyof I["msg"]["newValidBlock"], keyof import("../../tendermint/consensus/types").NewValidBlock>, never>) | undefined;
            proposal?: ({
                proposal?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    polRound?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } & {
                proposal?: ({
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    polRound?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                } & {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    polRound?: number | undefined;
                    blockId?: ({
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: ({
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msg"]["proposal"]["proposal"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["proposal"]["proposal"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                    timestamp?: ({
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & Record<Exclude<keyof I["msg"]["proposal"]["proposal"]["timestamp"], keyof Timestamp>, never>) | undefined;
                    signature?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["msg"]["proposal"]["proposal"], keyof import("../types/types").Proposal>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["proposal"], "proposal">, never>) | undefined;
            proposalPol?: ({
                height?: string | undefined;
                proposalPolRound?: number | undefined;
                proposalPol?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } & {
                height?: string | undefined;
                proposalPolRound?: number | undefined;
                proposalPol?: ({
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } & {
                    bits?: string | undefined;
                    elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["proposalPol"]["proposalPol"]["elems"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["proposalPol"]["proposalPol"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["proposalPol"], keyof import("../../tendermint/consensus/types").ProposalPOL>, never>) | undefined;
            blockPart?: ({
                height?: string | undefined;
                round?: number | undefined;
                part?: {
                    index?: number | undefined;
                    bytes?: Uint8Array | undefined;
                    proof?: {
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: Uint8Array[] | undefined;
                    } | undefined;
                } | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                part?: ({
                    index?: number | undefined;
                    bytes?: Uint8Array | undefined;
                    proof?: {
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: Uint8Array[] | undefined;
                    } | undefined;
                } & {
                    index?: number | undefined;
                    bytes?: Uint8Array | undefined;
                    proof?: ({
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: Uint8Array[] | undefined;
                    } & {
                        total?: string | undefined;
                        index?: string | undefined;
                        leafHash?: Uint8Array | undefined;
                        aunts?: (Uint8Array[] & Uint8Array[] & Record<Exclude<keyof I["msg"]["blockPart"]["part"]["proof"]["aunts"], keyof Uint8Array[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["blockPart"]["part"]["proof"], keyof import("../crypto/proof").Proof>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["blockPart"]["part"], keyof import("../types/types").Part>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["blockPart"], keyof import("../../tendermint/consensus/types").BlockPart>, never>) | undefined;
            vote?: ({
                vote?: {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    validatorAddress?: Uint8Array | undefined;
                    validatorIndex?: number | undefined;
                    signature?: Uint8Array | undefined;
                } | undefined;
            } & {
                vote?: ({
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    timestamp?: {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } | undefined;
                    validatorAddress?: Uint8Array | undefined;
                    validatorIndex?: number | undefined;
                    signature?: Uint8Array | undefined;
                } & {
                    type?: import("../types/types").SignedMsgType | undefined;
                    height?: string | undefined;
                    round?: number | undefined;
                    blockId?: ({
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: ({
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msg"]["vote"]["vote"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["vote"]["vote"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                    timestamp?: ({
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & {
                        seconds?: string | undefined;
                        nanos?: number | undefined;
                    } & Record<Exclude<keyof I["msg"]["vote"]["vote"]["timestamp"], keyof Timestamp>, never>) | undefined;
                    validatorAddress?: Uint8Array | undefined;
                    validatorIndex?: number | undefined;
                    signature?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["msg"]["vote"]["vote"], keyof import("../types/types").Vote>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["vote"], "vote">, never>) | undefined;
            hasVote?: ({
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                index?: number | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                index?: number | undefined;
            } & Record<Exclude<keyof I["msg"]["hasVote"], keyof import("../../tendermint/consensus/types").HasVote>, never>) | undefined;
            voteSetMaj23?: ({
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: ({
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } & {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: ({
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["msg"]["voteSetMaj23"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["voteSetMaj23"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["voteSetMaj23"], keyof import("../../tendermint/consensus/types").VoteSetMaj23>, never>) | undefined;
            voteSetBits?: ({
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                votes?: {
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                type?: import("../types/types").SignedMsgType | undefined;
                blockId?: ({
                    hash?: Uint8Array | undefined;
                    partSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                } & {
                    hash?: Uint8Array | undefined;
                    partSetHeader?: ({
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["msg"]["voteSetBits"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["voteSetBits"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                votes?: ({
                    bits?: string | undefined;
                    elems?: string[] | undefined;
                } & {
                    bits?: string | undefined;
                    elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["voteSetBits"]["votes"]["elems"], keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["voteSetBits"]["votes"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
            } & Record<Exclude<keyof I["msg"]["voteSetBits"], keyof import("../../tendermint/consensus/types").VoteSetBits>, never>) | undefined;
        } & Record<Exclude<keyof I["msg"], keyof Message>, never>) | undefined;
        peerId?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgInfo>, never>>(object: I): MsgInfo;
};
export declare const TimeoutInfo: {
    encode(message: TimeoutInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TimeoutInfo;
    fromJSON(object: any): TimeoutInfo;
    toJSON(message: TimeoutInfo): unknown;
    fromPartial<I extends {
        duration?: {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } | undefined;
        height?: string | undefined;
        round?: number | undefined;
        step?: number | undefined;
    } & {
        duration?: ({
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & Record<Exclude<keyof I["duration"], keyof Duration>, never>) | undefined;
        height?: string | undefined;
        round?: number | undefined;
        step?: number | undefined;
    } & Record<Exclude<keyof I, keyof TimeoutInfo>, never>>(object: I): TimeoutInfo;
};
export declare const EndHeight: {
    encode(message: EndHeight, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): EndHeight;
    fromJSON(object: any): EndHeight;
    toJSON(message: EndHeight): unknown;
    fromPartial<I extends {
        height?: string | undefined;
    } & {
        height?: string | undefined;
    } & Record<Exclude<keyof I, "height">, never>>(object: I): EndHeight;
};
export declare const WALMessage: {
    encode(message: WALMessage, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WALMessage;
    fromJSON(object: any): WALMessage;
    toJSON(message: WALMessage): unknown;
    fromPartial<I extends {
        eventDataRoundState?: {
            height?: string | undefined;
            round?: number | undefined;
            step?: string | undefined;
        } | undefined;
        msgInfo?: {
            msg?: {
                newRoundStep?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    step?: number | undefined;
                    secondsSinceStartTime?: string | undefined;
                    lastCommitRound?: number | undefined;
                } | undefined;
                newValidBlock?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    blockPartSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                    blockParts?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                    isCommit?: boolean | undefined;
                } | undefined;
                proposal?: {
                    proposal?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                proposalPol?: {
                    height?: string | undefined;
                    proposalPolRound?: number | undefined;
                    proposalPol?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
                blockPart?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    part?: {
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                vote?: {
                    vote?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                hasVote?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    index?: number | undefined;
                } | undefined;
                voteSetMaj23?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                voteSetBits?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    votes?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            peerId?: string | undefined;
        } | undefined;
        timeoutInfo?: {
            duration?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
            height?: string | undefined;
            round?: number | undefined;
            step?: number | undefined;
        } | undefined;
        endHeight?: {
            height?: string | undefined;
        } | undefined;
    } & {
        eventDataRoundState?: ({
            height?: string | undefined;
            round?: number | undefined;
            step?: string | undefined;
        } & {
            height?: string | undefined;
            round?: number | undefined;
            step?: string | undefined;
        } & Record<Exclude<keyof I["eventDataRoundState"], keyof EventDataRoundState>, never>) | undefined;
        msgInfo?: ({
            msg?: {
                newRoundStep?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    step?: number | undefined;
                    secondsSinceStartTime?: string | undefined;
                    lastCommitRound?: number | undefined;
                } | undefined;
                newValidBlock?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    blockPartSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                    blockParts?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                    isCommit?: boolean | undefined;
                } | undefined;
                proposal?: {
                    proposal?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                proposalPol?: {
                    height?: string | undefined;
                    proposalPolRound?: number | undefined;
                    proposalPol?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
                blockPart?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    part?: {
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                vote?: {
                    vote?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                hasVote?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    index?: number | undefined;
                } | undefined;
                voteSetMaj23?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                voteSetBits?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    votes?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            peerId?: string | undefined;
        } & {
            msg?: ({
                newRoundStep?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    step?: number | undefined;
                    secondsSinceStartTime?: string | undefined;
                    lastCommitRound?: number | undefined;
                } | undefined;
                newValidBlock?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    blockPartSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                    blockParts?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                    isCommit?: boolean | undefined;
                } | undefined;
                proposal?: {
                    proposal?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                proposalPol?: {
                    height?: string | undefined;
                    proposalPolRound?: number | undefined;
                    proposalPol?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
                blockPart?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    part?: {
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                vote?: {
                    vote?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } | undefined;
                hasVote?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    index?: number | undefined;
                } | undefined;
                voteSetMaj23?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                voteSetBits?: {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    votes?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } | undefined;
            } & {
                newRoundStep?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    step?: number | undefined;
                    secondsSinceStartTime?: string | undefined;
                    lastCommitRound?: number | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    step?: number | undefined;
                    secondsSinceStartTime?: string | undefined;
                    lastCommitRound?: number | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["newRoundStep"], keyof import("../../tendermint/consensus/types").NewRoundStep>, never>) | undefined;
                newValidBlock?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    blockPartSetHeader?: {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } | undefined;
                    blockParts?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                    isCommit?: boolean | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    blockPartSetHeader?: ({
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & {
                        total?: number | undefined;
                        hash?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["newValidBlock"]["blockPartSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                    blockParts?: ({
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } & {
                        bits?: string | undefined;
                        elems?: (string[] & string[] & Record<Exclude<keyof I["msgInfo"]["msg"]["newValidBlock"]["blockParts"]["elems"], keyof string[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["newValidBlock"]["blockParts"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                    isCommit?: boolean | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["newValidBlock"], keyof import("../../tendermint/consensus/types").NewValidBlock>, never>) | undefined;
                proposal?: ({
                    proposal?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } & {
                    proposal?: ({
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                    } & {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        polRound?: number | undefined;
                        blockId?: ({
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: ({
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposal"]["proposal"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposal"]["proposal"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                        timestamp?: ({
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } & {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposal"]["proposal"]["timestamp"], keyof Timestamp>, never>) | undefined;
                        signature?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposal"]["proposal"], keyof import("../types/types").Proposal>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposal"], "proposal">, never>) | undefined;
                proposalPol?: ({
                    height?: string | undefined;
                    proposalPolRound?: number | undefined;
                    proposalPol?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } & {
                    height?: string | undefined;
                    proposalPolRound?: number | undefined;
                    proposalPol?: ({
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } & {
                        bits?: string | undefined;
                        elems?: (string[] & string[] & Record<Exclude<keyof I["msgInfo"]["msg"]["proposalPol"]["proposalPol"]["elems"], keyof string[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposalPol"]["proposalPol"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["proposalPol"], keyof import("../../tendermint/consensus/types").ProposalPOL>, never>) | undefined;
                blockPart?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    part?: {
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    part?: ({
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } | undefined;
                    } & {
                        index?: number | undefined;
                        bytes?: Uint8Array | undefined;
                        proof?: ({
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: Uint8Array[] | undefined;
                        } & {
                            total?: string | undefined;
                            index?: string | undefined;
                            leafHash?: Uint8Array | undefined;
                            aunts?: (Uint8Array[] & Uint8Array[] & Record<Exclude<keyof I["msgInfo"]["msg"]["blockPart"]["part"]["proof"]["aunts"], keyof Uint8Array[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["blockPart"]["part"]["proof"], keyof import("../crypto/proof").Proof>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["blockPart"]["part"], keyof import("../types/types").Part>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["blockPart"], keyof import("../../tendermint/consensus/types").BlockPart>, never>) | undefined;
                vote?: ({
                    vote?: {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } | undefined;
                } & {
                    vote?: ({
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        timestamp?: {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } & {
                        type?: import("../types/types").SignedMsgType | undefined;
                        height?: string | undefined;
                        round?: number | undefined;
                        blockId?: ({
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: ({
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["msgInfo"]["msg"]["vote"]["vote"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["vote"]["vote"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                        timestamp?: ({
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } & {
                            seconds?: string | undefined;
                            nanos?: number | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["vote"]["vote"]["timestamp"], keyof Timestamp>, never>) | undefined;
                        validatorAddress?: Uint8Array | undefined;
                        validatorIndex?: number | undefined;
                        signature?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["vote"]["vote"], keyof import("../types/types").Vote>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["vote"], "vote">, never>) | undefined;
                hasVote?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    index?: number | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    index?: number | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["hasVote"], keyof import("../../tendermint/consensus/types").HasVote>, never>) | undefined;
                voteSetMaj23?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: ({
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: ({
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetMaj23"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetMaj23"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetMaj23"], keyof import("../../tendermint/consensus/types").VoteSetMaj23>, never>) | undefined;
                voteSetBits?: ({
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    votes?: {
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } | undefined;
                } & {
                    height?: string | undefined;
                    round?: number | undefined;
                    type?: import("../types/types").SignedMsgType | undefined;
                    blockId?: ({
                        hash?: Uint8Array | undefined;
                        partSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        hash?: Uint8Array | undefined;
                        partSetHeader?: ({
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetBits"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetBits"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                    votes?: ({
                        bits?: string | undefined;
                        elems?: string[] | undefined;
                    } & {
                        bits?: string | undefined;
                        elems?: (string[] & string[] & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetBits"]["votes"]["elems"], keyof string[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetBits"]["votes"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                } & Record<Exclude<keyof I["msgInfo"]["msg"]["voteSetBits"], keyof import("../../tendermint/consensus/types").VoteSetBits>, never>) | undefined;
            } & Record<Exclude<keyof I["msgInfo"]["msg"], keyof Message>, never>) | undefined;
            peerId?: string | undefined;
        } & Record<Exclude<keyof I["msgInfo"], keyof MsgInfo>, never>) | undefined;
        timeoutInfo?: ({
            duration?: {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } | undefined;
            height?: string | undefined;
            round?: number | undefined;
            step?: number | undefined;
        } & {
            duration?: ({
                seconds?: string | undefined;
                nanos?: number | undefined;
            } & {
                seconds?: string | undefined;
                nanos?: number | undefined;
            } & Record<Exclude<keyof I["timeoutInfo"]["duration"], keyof Duration>, never>) | undefined;
            height?: string | undefined;
            round?: number | undefined;
            step?: number | undefined;
        } & Record<Exclude<keyof I["timeoutInfo"], keyof TimeoutInfo>, never>) | undefined;
        endHeight?: ({
            height?: string | undefined;
        } & {
            height?: string | undefined;
        } & Record<Exclude<keyof I["endHeight"], "height">, never>) | undefined;
    } & Record<Exclude<keyof I, keyof WALMessage>, never>>(object: I): WALMessage;
};
export declare const TimedWALMessage: {
    encode(message: TimedWALMessage, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TimedWALMessage;
    fromJSON(object: any): TimedWALMessage;
    toJSON(message: TimedWALMessage): unknown;
    fromPartial<I extends {
        time?: {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } | undefined;
        msg?: {
            eventDataRoundState?: {
                height?: string | undefined;
                round?: number | undefined;
                step?: string | undefined;
            } | undefined;
            msgInfo?: {
                msg?: {
                    newRoundStep?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } | undefined;
                    newValidBlock?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                        blockParts?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                        isCommit?: boolean | undefined;
                    } | undefined;
                    proposal?: {
                        proposal?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    proposalPol?: {
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                    blockPart?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    vote?: {
                        vote?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    hasVote?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } | undefined;
                    voteSetMaj23?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    voteSetBits?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        votes?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                peerId?: string | undefined;
            } | undefined;
            timeoutInfo?: {
                duration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
            } | undefined;
            endHeight?: {
                height?: string | undefined;
            } | undefined;
        } | undefined;
    } & {
        time?: ({
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: string | undefined;
            nanos?: number | undefined;
        } & Record<Exclude<keyof I["time"], keyof Timestamp>, never>) | undefined;
        msg?: ({
            eventDataRoundState?: {
                height?: string | undefined;
                round?: number | undefined;
                step?: string | undefined;
            } | undefined;
            msgInfo?: {
                msg?: {
                    newRoundStep?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } | undefined;
                    newValidBlock?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                        blockParts?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                        isCommit?: boolean | undefined;
                    } | undefined;
                    proposal?: {
                        proposal?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    proposalPol?: {
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                    blockPart?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    vote?: {
                        vote?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    hasVote?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } | undefined;
                    voteSetMaj23?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    voteSetBits?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        votes?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                peerId?: string | undefined;
            } | undefined;
            timeoutInfo?: {
                duration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
            } | undefined;
            endHeight?: {
                height?: string | undefined;
            } | undefined;
        } & {
            eventDataRoundState?: ({
                height?: string | undefined;
                round?: number | undefined;
                step?: string | undefined;
            } & {
                height?: string | undefined;
                round?: number | undefined;
                step?: string | undefined;
            } & Record<Exclude<keyof I["msg"]["eventDataRoundState"], keyof EventDataRoundState>, never>) | undefined;
            msgInfo?: ({
                msg?: {
                    newRoundStep?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } | undefined;
                    newValidBlock?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                        blockParts?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                        isCommit?: boolean | undefined;
                    } | undefined;
                    proposal?: {
                        proposal?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    proposalPol?: {
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                    blockPart?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    vote?: {
                        vote?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    hasVote?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } | undefined;
                    voteSetMaj23?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    voteSetBits?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        votes?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                peerId?: string | undefined;
            } & {
                msg?: ({
                    newRoundStep?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } | undefined;
                    newValidBlock?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                        blockParts?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                        isCommit?: boolean | undefined;
                    } | undefined;
                    proposal?: {
                        proposal?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    proposalPol?: {
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                    blockPart?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    vote?: {
                        vote?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } | undefined;
                    hasVote?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } | undefined;
                    voteSetMaj23?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    voteSetBits?: {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        votes?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    newRoundStep?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        step?: number | undefined;
                        secondsSinceStartTime?: string | undefined;
                        lastCommitRound?: number | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["newRoundStep"], keyof import("../../tendermint/consensus/types").NewRoundStep>, never>) | undefined;
                    newValidBlock?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } | undefined;
                        blockParts?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                        isCommit?: boolean | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        blockPartSetHeader?: ({
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & {
                            total?: number | undefined;
                            hash?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["newValidBlock"]["blockPartSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                        blockParts?: ({
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } & {
                            bits?: string | undefined;
                            elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["newValidBlock"]["blockParts"]["elems"], keyof string[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["newValidBlock"]["blockParts"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                        isCommit?: boolean | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["newValidBlock"], keyof import("../../tendermint/consensus/types").NewValidBlock>, never>) | undefined;
                    proposal?: ({
                        proposal?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        proposal?: ({
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            polRound?: number | undefined;
                            blockId?: ({
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: ({
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } & {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposal"]["proposal"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposal"]["proposal"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                            timestamp?: ({
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } & {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposal"]["proposal"]["timestamp"], keyof Timestamp>, never>) | undefined;
                            signature?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposal"]["proposal"], keyof import("../types/types").Proposal>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposal"], "proposal">, never>) | undefined;
                    proposalPol?: ({
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } & {
                        height?: string | undefined;
                        proposalPolRound?: number | undefined;
                        proposalPol?: ({
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } & {
                            bits?: string | undefined;
                            elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposalPol"]["proposalPol"]["elems"], keyof string[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposalPol"]["proposalPol"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["proposalPol"], keyof import("../../tendermint/consensus/types").ProposalPOL>, never>) | undefined;
                    blockPart?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        part?: ({
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } | undefined;
                        } & {
                            index?: number | undefined;
                            bytes?: Uint8Array | undefined;
                            proof?: ({
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: Uint8Array[] | undefined;
                            } & {
                                total?: string | undefined;
                                index?: string | undefined;
                                leafHash?: Uint8Array | undefined;
                                aunts?: (Uint8Array[] & Uint8Array[] & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["blockPart"]["part"]["proof"]["aunts"], keyof Uint8Array[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["blockPart"]["part"]["proof"], keyof import("../crypto/proof").Proof>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["blockPart"]["part"], keyof import("../types/types").Part>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["blockPart"], keyof import("../../tendermint/consensus/types").BlockPart>, never>) | undefined;
                    vote?: ({
                        vote?: {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                    } & {
                        vote?: ({
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                            timestamp?: {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            type?: import("../types/types").SignedMsgType | undefined;
                            height?: string | undefined;
                            round?: number | undefined;
                            blockId?: ({
                                hash?: Uint8Array | undefined;
                                partSetHeader?: {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                hash?: Uint8Array | undefined;
                                partSetHeader?: ({
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } & {
                                    total?: number | undefined;
                                    hash?: Uint8Array | undefined;
                                } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["vote"]["vote"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["vote"]["vote"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                            timestamp?: ({
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } & {
                                seconds?: string | undefined;
                                nanos?: number | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["vote"]["vote"]["timestamp"], keyof Timestamp>, never>) | undefined;
                            validatorAddress?: Uint8Array | undefined;
                            validatorIndex?: number | undefined;
                            signature?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["vote"]["vote"], keyof import("../types/types").Vote>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["vote"], "vote">, never>) | undefined;
                    hasVote?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        index?: number | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["hasVote"], keyof import("../../tendermint/consensus/types").HasVote>, never>) | undefined;
                    voteSetMaj23?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: ({
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: ({
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetMaj23"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetMaj23"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetMaj23"], keyof import("../../tendermint/consensus/types").VoteSetMaj23>, never>) | undefined;
                    voteSetBits?: ({
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                        votes?: {
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } | undefined;
                    } & {
                        height?: string | undefined;
                        round?: number | undefined;
                        type?: import("../types/types").SignedMsgType | undefined;
                        blockId?: ({
                            hash?: Uint8Array | undefined;
                            partSetHeader?: {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            hash?: Uint8Array | undefined;
                            partSetHeader?: ({
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & {
                                total?: number | undefined;
                                hash?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetBits"]["blockId"]["partSetHeader"], keyof import("../types/types").PartSetHeader>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetBits"]["blockId"], keyof import("../types/types").BlockID>, never>) | undefined;
                        votes?: ({
                            bits?: string | undefined;
                            elems?: string[] | undefined;
                        } & {
                            bits?: string | undefined;
                            elems?: (string[] & string[] & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetBits"]["votes"]["elems"], keyof string[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetBits"]["votes"], keyof import("../libs/bits/types").BitArray>, never>) | undefined;
                    } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"]["voteSetBits"], keyof import("../../tendermint/consensus/types").VoteSetBits>, never>) | undefined;
                } & Record<Exclude<keyof I["msg"]["msgInfo"]["msg"], keyof Message>, never>) | undefined;
                peerId?: string | undefined;
            } & Record<Exclude<keyof I["msg"]["msgInfo"], keyof MsgInfo>, never>) | undefined;
            timeoutInfo?: ({
                duration?: {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } | undefined;
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
            } & {
                duration?: ({
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & {
                    seconds?: string | undefined;
                    nanos?: number | undefined;
                } & Record<Exclude<keyof I["msg"]["timeoutInfo"]["duration"], keyof Duration>, never>) | undefined;
                height?: string | undefined;
                round?: number | undefined;
                step?: number | undefined;
            } & Record<Exclude<keyof I["msg"]["timeoutInfo"], keyof TimeoutInfo>, never>) | undefined;
            endHeight?: ({
                height?: string | undefined;
            } & {
                height?: string | undefined;
            } & Record<Exclude<keyof I["msg"]["endHeight"], "height">, never>) | undefined;
        } & Record<Exclude<keyof I["msg"], keyof WALMessage>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof TimedWALMessage>, never>>(object: I): TimedWALMessage;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
//# sourceMappingURL=wal.d.ts.map