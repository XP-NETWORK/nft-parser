/// <reference types="@vechain/connex-types" />
import { newVendor } from './vendor';
/**
 * Class implements Connex interface
 */
export declare class Framework implements Connex {
    /**
     * create a wrapper for driver, to validate responses. it should be helpful to make sure driver is properly
     * implemented in development stage.
     * @param driver the driver to be wrapped
     * @param errorHandler optional error handler. If omitted, error message will be printed via console.warn.
     */
    static guardDriver(driver: Connex.Driver, errorHandler?: (err: Error) => void): Connex.Driver;
    readonly thor: Connex.Thor;
    readonly vendor: Connex.Vendor;
    /**
     * constructor
     * @param driver the driver instance
     */
    constructor(driver: Connex.Driver);
}
export { newVendor };
