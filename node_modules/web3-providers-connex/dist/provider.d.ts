/// <reference types="@vechain/connex-types" />
/// <reference types="@vechain/connex-framework/dist/driver-interface" />
import EventEmitter from 'eventemitter3';
import { RequestArguments } from 'web3-core';
import { Net, Wallet } from '@vechain/connex-driver';
import { Restful } from './restful';
export declare class ConnexProvider extends EventEmitter {
    readonly connex: Connex;
    readonly chainTag: number;
    readonly restful?: Restful;
    readonly wallet?: Wallet;
    private readonly _formatter;
    private readonly _methodMap;
    private _subscriptions;
    constructor(opt: {
        connex: Connex;
        wallet?: Wallet;
        net?: Net;
    });
    request(req: RequestArguments): Promise<any>;
    private _next;
    private _accounts;
    private _sendRawTransaction;
    private _subscribe;
    private _unsubscribe;
    private _subLoop;
    private _getSubscriptionId;
    private _getLogs;
    private _estimateGas;
    private _call;
    private _gasPrice;
    private _sendTransaction;
    private _getStorageAt;
    private _getTransactionReceipt;
    private _isSyncing;
    private _getCode;
    private _getBlockNumber;
    private _getBalance;
    private _getTransactionByHash;
    private _getChainId;
    private _getBlockByNumber;
    private _getBlockByHash;
}
