"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bloom = void 0;
const blake2b_1 = require("./blake2b");
/**
 * 2048 bits Bloom filter
 */
class Bloom {
    /**
     * new bloom filter instance
     * @param k number of hash functions
     * @param bits leave it out to construct an empty one
     */
    constructor(k, bits) {
        if (bits) {
            this.bits = bits;
        }
        else {
            this.bits = Buffer.alloc(Bloom.BITS_LENGTH / 8);
        }
        this.k = k;
    }
    /** estimate k(number of hash functions) according to item count */
    static estimateK(itemCount) {
        const k = Math.round(this.BITS_LENGTH / itemCount * Math.LN2);
        return Math.max(Math.min(k, this.MAX_K), 1);
    }
    /**
     * add item
     * @param item
     */
    add(item) {
        this.distribute(item, (index, bit) => {
            // tslint:disable-next-line:no-bitwise
            this.bits[index] |= bit;
            return true;
        });
    }
    /**
     * test if an item contained. (false positive)
     * @param item
     */
    test(item) {
        return this.distribute(item, (index, bit) => {
            // tslint:disable-next-line:no-bitwise
            return (this.bits[index] & bit) === bit;
        });
    }
    distribute(item, cb) {
        const hash = blake2b_1.blake2b256(item);
        for (let i = 0; i < this.k; i++) {
            // tslint:disable-next-line:no-bitwise
            const d = (hash[i * 2 + 1] + (hash[i * 2] << 8)) % Bloom.BITS_LENGTH;
            // tslint:disable-next-line:no-bitwise
            const bit = 1 << (d % 8);
            if (!cb(Math.floor(d / 8), bit)) {
                return false;
            }
        }
        return true;
    }
}
exports.Bloom = Bloom;
/** number of hash functions */
Bloom.MAX_K = 16;
/** bit length */
Bloom.BITS_LENGTH = 2048;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvb20uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYmxvb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQXNDO0FBRXRDOztHQUVHO0FBQ0gsTUFBYSxLQUFLO0lBZWQ7Ozs7T0FJRztJQUNILFlBQVksQ0FBUyxFQUFFLElBQWE7UUFDaEMsSUFBSSxJQUFJLEVBQUU7WUFDTixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQTtTQUNuQjthQUFNO1lBQ0gsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUE7U0FDbEQ7UUFDRCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNkLENBQUM7SUFyQkQsbUVBQW1FO0lBQzVELE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBaUI7UUFDckMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDN0QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUMvQyxDQUFDO0lBbUJEOzs7T0FHRztJQUNJLEdBQUcsQ0FBQyxJQUFZO1FBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQ2pDLHNDQUFzQztZQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQTtZQUN2QixPQUFPLElBQUksQ0FBQTtRQUNmLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVEOzs7T0FHRztJQUNJLElBQUksQ0FBQyxJQUFZO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDeEMsc0NBQXNDO1lBQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQTtRQUMzQyxDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFTyxVQUFVLENBQUMsSUFBWSxFQUFFLEVBQTJDO1FBQ3hFLE1BQU0sSUFBSSxHQUFHLG9CQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0Isc0NBQXNDO1lBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQTtZQUNwRSxzQ0FBc0M7WUFDdEMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBQ3hCLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7Z0JBQzdCLE9BQU8sS0FBSyxDQUFBO2FBQ2Y7U0FDSjtRQUNELE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQzs7QUFoRUwsc0JBaUVDO0FBaEVHLCtCQUErQjtBQUNSLFdBQUssR0FBRyxFQUFFLENBQUE7QUFDakMsaUJBQWlCO0FBQ00saUJBQVcsR0FBRyxJQUFJLENBQUEifQ==