/// <reference types="node" />
import { EndpointDefinition, TypedValue } from "./typesystem";
import { ArgumentErrorContext } from "./argumentErrorContext";
import { IAddress } from "../interface";
export declare namespace NativeTypes {
    type NativeBuffer = Buffer | string;
    type NativeBytes = Buffer | {
        valueOf(): Buffer;
    } | string;
    type NativeAddress = string | Buffer | IAddress | {
        getAddress(): IAddress;
    };
}
export declare namespace NativeSerializer {
    /**
     * Interprets a set of native javascript values into a set of typed values, given parameter definitions.
     */
    function nativeToTypedValues(args: any[], endpoint: EndpointDefinition): TypedValue[];
    function convertNativeToAddress(native: NativeTypes.NativeAddress, errorContext: ArgumentErrorContext): IAddress;
}
