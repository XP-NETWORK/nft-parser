interface IGasConfiguration {
    readonly minGasLimit: number;
    readonly gasPerDataByte: number;
    readonly gasCostESDTTransfer: number;
    readonly gasCostESDTNFTTransfer: number;
    readonly gasCostESDTNFTMultiTransfer: number;
}
/**
 * This is mirroring (on a best efforts basis) the network's gas configuration & gas schedule:
 *  - https://gateway.elrond.com/network/config
 *  - https://github.com/ElrondNetwork/elrond-config-mainnet/tree/master/gasSchedules
 *  - https://github.com/ElrondNetwork/elrond-config-mainnet/blob/master/enableEpochs.toml#L200
 */
export declare const DefaultGasConfiguration: IGasConfiguration;
export declare class GasEstimator {
    private readonly gasConfiguration;
    constructor(gasConfiguration?: IGasConfiguration);
    forEGLDTransfer(dataLength: number): number;
    forESDTTransfer(dataLength: number): number;
    forESDTNFTTransfer(dataLength: number): number;
    forMultiESDTNFTTransfer(dataLength: number, numTransfers: number): number;
}
export {};
